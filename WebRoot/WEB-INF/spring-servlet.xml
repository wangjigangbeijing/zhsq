<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-3.0.xsd">
		
	<context:component-scan base-package="com" />
	<mvc:default-servlet-handler />
	<mvc:annotation-driven />

	<security:global-method-security
		pre-post-annotations="enabled">
	</security:global-method-security>

	<security:http pattern="/index.html" security="none" />
	<security:http pattern="/**/*.gif" security="none" />
	<security:http pattern="/**/*.js" security="none" />
	<security:http pattern="/**/*.jpg" security="none" />
	<security:http pattern="/**/*.png" security="none" />
	<security:http pattern="/**/*.apk" security="none" />
	<security:http pattern="/**/*.css" security="none" />
	<security:http pattern="/loginController/**" security="none" />
	<security:http pattern="/**/upLoad" security="none" />
	<security:http pattern="/**/downloadIcon" security="none" />
	<security:http pattern="/**/download" security="none" />
	<security:http pattern="/**/*.woff" security="none" />
	<security:http pattern="/**/*.woff2" security="none" />
	<security:http pattern="/**/*.tff" security="none" />
	<security:http pattern="/**/*.pdf" security="none" />
	
	<!--auto-config = true 则使用from-login. 如果不使用该属性 则默认为http-basic(没有session). -->
	<!-- lowercase-comparisons：表示URL比较前先转为小写。 -->
	<!-- path-type：表示使用Apache Ant的匹配模式。 -->
	<!--access-denied-page：访问拒绝时转向的页面。 -->
	<!-- access-decision-manager-ref：指定了自定义的访问策略管理器。 -->


	<security:http use-expressions="true" auto-config="true">


		<security:csrf disabled="true"/>
	
	
		<!--login-page：指定登录页面。 -->
		<!-- login-processing-url：指定了客户在登录页面中按下 Sign In 按钮时要访问的 URL。 -->
		<!-- authentication-failure-url：指定了身份验证失败时跳转到的页面。 -->
		<!-- default-target-url：指定了成功进行身份验证和授权后默认呈现给用户的页面。 -->
		<!-- always-use-default-target：指定了是否在身份验证通过后总是跳转到default-target-url属性指定的URL。 -->
		<security:form-login login-page="/index.html"
			authentication-failure-url="/redirect.html"/>

		<!--logout-url：指定了用于响应退出系统请求的URL。其默认值为：/j_spring_security_logout。 -->
		<!-- logout-success-url：退出系统后转向的URL。 -->
		<!-- invalidate-session：指定在退出系统时是否要销毁Session。 -->
		<security:logout invalidate-session="true"
			logout-success-url="/index.html" logout-url="/j_spring_security_logout" />
		<!-- 实现免登陆验证 -->
		<security:remember-me />


		<!-- max-sessions:允许用户帐号登录的次数。范例限制用户只能登录一次。 -->
		<!-- 此值表示：用户第二次登录时，前一次的登录信息都被清空。 -->
		<!-- exception-if-maximum-exceeded:默认为false， -->
		<!-- 当exception-if-maximum-exceeded="true"时系统会拒绝第二次登录。 -->


		<security:session-management session-fixation-protection="none"
			invalid-session-url="/index.html">
			<security:concurrency-control
				max-sessions="1" error-if-maximum-exceeded="true" />
		</security:session-management>
		<security:custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR" />
		<!-- security:session-management session-authentication-strategy-ref="sas" /-->

	</security:http>


		

	<!-- 实现了UserDetailsService的Bean -->
	<security:authentication-manager alias="myAuthenticationManager">
		<security:authentication-provider
			user-service-ref="myUserDetailServiceImpl">
			<!-- 登入 密码 采用MD5加密 -->
			<security:password-encoder hash="md5"
				ref="passwordEncoder">
			</security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- 获取用户登入角色信息 -->
	<bean id="myUserDetailServiceImpl" class="com.template.filter.UserDetailServiceImpl">
		<!-- property name="userService" ref="userService"></property -->
	</bean>

	<!-- 用户的密码加密或解密 -->
	<bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />

	<bean id="sas"
		class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
		<constructor-arg ref="sessionRegistry" />
		<property name="maximumSessions" value="1" />
		<!-- 防止session攻击>
		<property name="alwaysCreateSession" value="true" / >
		<property name="migrateSessionAttributes" value="false" /-->
		<!-- 同一个帐号 同时只能一个人登录 -->
		<property name="exceptionIfMaximumExceeded" value="false" />
	</bean>

	<bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />
	<!-- 事件监听:实现了ApplicationListener监听接口，包括AuthenticationCredentialsNotFoundEvent 
		事件， -->
	<!-- AuthorizationFailureEvent事件，AuthorizedEvent事件， PublicInvocationEvent事件 -->
	<bean
		class="org.springframework.security.authentication.event.LoggerListener" />
	<!-- 自定义资源文件 提示信息 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames" value="classpath:message_zh_CN">
		</property>
	</bean>



	<!-- 配置过滤器 -->
	<bean id="myFilter" class="com.template.filter.SecurityFilter">

		<!-- 用户拥有的权限 -->
		<property name="authenticationManager" ref="myAuthenticationManager" />

		<!-- 用户是否拥有所请求资源的权限 -->
		<property name="accessDecisionManager" ref="myAccessDecisionManager" />

		<!-- 资源与权限对应关系 -->
		<property name="securityMetadataSource" ref="mySecurityMetadataSource" />
		
	</bean>

	<!-- 验证用户请求资源 是否拥有权限 -->
	<bean id="myAccessDecisionManager" class="com.template.filter.MyAccessDecisionManager">
	</bean>

	<!-- 系统运行时加载 系统要拦截的资源 与用户请求时要过滤的资源 -->
	<bean id="mySecurityMetadataSource" class="com.template.filter.MySecurityMetadataSource">
		<!-- constructor-arg name="powerService" ref="powerService"> </constructor-arg -->
	</bean>

	<!-- 实现了UserDetailsService的Bean -->
	<security:authentication-manager alias="myAuthenticationManager">
		<security:authentication-provider
			user-service-ref="myUserDetailServiceImpl">
			<!-- 登入 密码 采用MD5加密 -->
			<security:password-encoder hash="md5"
				ref="passwordEncoder">
			</security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>

	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />


	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">no</prop>
						<prop key="kaptcha.border.color">105,179,90</prop>
						<prop key="kaptcha.textproducer.font.color">red</prop>
						<prop key="kaptcha.image.width">250</prop>
						<prop key="kaptcha.textproducer.font.size">60</prop>
						<prop key="kaptcha.image.height">70</prop>
						<prop key="kaptcha.session.key">code</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>


	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸为1MB -->
		<property name="maxUploadSize">
			<value>4194304</value>
		</property>
	</bean>










	<bean id="jacksonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>


	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jacksonMessageConverter" />
			</list>
		</property>
	</bean>

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<!-- property name="prefix" value="/WEB-INF/" / -->
		<property name="suffix" value=".html" />
	</bean>






</beans>